server {
    listen 8080 default_server;
    server_name _;
    #server_name yourdomain.com;  # Replace with your actual domain

    # Increase the maximum allowed body size
    client_max_body_size 100M;

    # Set a 120-second timeout for reading the client request body
    client_body_timeout 120s;

    # Set proxy timeouts
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 10m;

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    error_page 500 501 502 503 504 = @error5xx;

    # Fallback for /api without an endpoint
    location = /api {
        default_type application/json;
        return 200 '{"message": "API root. Please use a specific endpoint."}';
    }

    # General API handler (including stub for root and non-existent routes)
    location /api/ {
        # Indexing service endpoints
        location /api/files {
            proxy_pass http://indexing_service:8001/files;
        }

        # Query service endpoints
        location /api/search {
            proxy_pass http://query_service:8002/search;
        }

        # Health check endpoint
        location = /api/health {
            return 200 '{"status": "ok"}';
        }

        # Stub answer for /api/ and any non-existent API routes
        default_type application/json;
        return 200 '{"message": "API root or non-existent endpoint. Please use a specific, valid endpoint."}';
    }

    # Proxy requests to / to the frontend (React build and static files)
    location / {
        proxy_pass http://frontend:3000/;
    }

    # Custom error handler for 5xx errors
    location @error5xx {
        default_type application/json;
        return 500 '{"error": "Internal Server Error", "status": 500}';
    }
}
