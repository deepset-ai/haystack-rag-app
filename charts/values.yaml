global:
  environment: development
  image:
    registryPath: registry.kube-system.svc.cluster.local:5000  # Local registry on Minikube
    pullPolicy: IfNotPresent
  secrets:
    useExternalSecrets: true  # Set this to true to use external secrets
    name: "hra-secrets"  # E.g., from `kubectl create secret generic hra-secrets ..`
    opensearch:
      adminUser: "admin"
      adminPassword: "your-password-here"  # Set it here unless useExternalSecrets is true
    openai:
      apiKey: "sk-proj-999"  # Set it here unless useExternalSecrets is true
  vault:
    enabled: true  # Set to true to use Vault for secrets
    role: "haystack-rag"  # Role for Vault authentication
    serviceAccount: "haystack-rag"  # Service account for Vault authentication
    secrets:
      - name: "opensearch"
        path: "kv/data/haystack-rag/opensearch"
        template: |
          {{- with secret "kv/data/haystack-rag/opensearch" -}}
          export OPENSEARCH_USER="{{ .Data.data.adminUser }}"
          export OPENSEARCH_PASSWORD="{{ .Data.data.adminPassword }}"
          {{- end -}}
      - name: "openai"
        path: "kv/data/haystack-rag/openai"
        template: |
          {{- with secret "kv/data/haystack-rag/openai" -}}
          export OPENAI_API_KEY="{{ .Data.data.apiKey }}"
          {{- end -}}

search:
  opensearch:
    enabled: true
    replicas: 1
    image:
      imageName: opensearch
      tag: "2.18.0"
      pullPolicy: IfNotPresent
    vaultCommand: "source /vault/secrets/opensearch && /usr/share/opensearch/bin/opensearch"
    securityContext:
      runAsUser: 1000
    podSecurityContext:
      fsGroup: 1000
    service:
      ports:
        - port: 9200
          targetPort: 9200
          name: rest-api
        - port: 9600
          targetPort: 9600
          name: performance
      type: ClusterIP
      clusterIP: None  # Headless service
    resources:
      requests:
        memory: "2Gi"
        cpu: "500m"
        ephemeral-storage: "2Gi"
      limits:
        memory: "4Gi"
        cpu: "1000m"
        ephemeral-storage: "4Gi"
    volumeClaimTemplates:
      size: 30Gi
      storageClass: standard  # Default storage class for Minikube
    config:
      javaOpts: "-Xms512m -Xmx512m"
    readinessProbe:
      tcpSocket:
        port: rest-api
      initialDelaySeconds: 90
      periodSeconds: 10
      timeoutSeconds: 10
      failureThreshold: 10
    livenessProbe:
      tcpSocket:
        port: rest-api
      initialDelaySeconds: 180
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 10

backend:
  indexing:
    enabled: true
    replicas: 1
    image:
      imageName: hra-indexing
      tag: latest
    vaultCommand: "source /vault/secrets/opensearch && source /vault/secrets/openai && uvicorn indexing.main:app --host 0.0.0.0 --port 8001"
    service:
      ports:
        - port: 8001
          targetPort: 8001
          name: indexing-api
      type: ClusterIP
      readinessProbe:
        httpGet:
          path: /health
          port: indexing-api
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 18
      livenessProbe:
        httpGet:
          path: /health
          port: indexing-api
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 18
    resources:
      requests:
        memory: "1Gi"
        cpu: "250m"
        ephemeral-storage: "10Gi"  # Increase ephemeral storage
      limits:
        memory: "2Gi"
        cpu: "500m"
        ephemeral-storage: "20Gi"
  query:
    enabled: true
    replicas: 1
    image:
      imageName: hra-query
      tag: latest
    vaultCommand: "source /vault/secrets/opensearch && source /vault/secrets/openai && uvicorn query.main:app --host 0.0.0.0 --port 8002"
    service:
      ports:
        - port: 8002
          targetPort: 8002
          name: query-api
      type: ClusterIP
      readinessProbe:
        httpGet:
          path: /health
          port: query-api
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 18
      livenessProbe:
        httpGet:
          path: /health
          port: query-api
        initialDelaySeconds: 60
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 18
    resources:
      requests:
        memory: "1Gi"
        cpu: "250m"
        ephemeral-storage: "10Gi"  # Increase ephemeral storage
      limits:
        memory: "2Gi"
        cpu: "500m"
        ephemeral-storage: "20Gi"
  storage:
    volumeName: file-storage
    mountPath: /app/files
  env:
    PYTHONUNBUFFERED: "1"
  config:
    llm:
      generator: openai
      useOpenAIEmbedder: false
    tokenizers:
      parallelism: false
    logging:
      level: INFO
      haystackLevel: INFO
    indexing:
      onStartup: true

frontend:
  enabled: true
  replicas: 1
  image:
    imageName: hra-frontend
    tag: latest
  service:
    ports:
      - port: 3000
        targetPort: 3000
        name: react-app
    type: ClusterIP
    readinessProbe:
      httpGet:
        path: /
        port: react-app
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
    livenessProbe:
      httpGet:
        path: /
        port: react-app
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 5
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"

apiGateway:
  enabled: true
  replicas: 1
  image:
    registryPath: docker.io/library
    imageName: nginx
    tag: alpine
  service:
    ports:
      - port: 8080
        targetPort: 8080
    type: ClusterIP
  configMap:
    name: api-gateway-config
  resources:
    requests:
      cpu: "100m"
      memory: "256Mi"
    limits:
      cpu: "200m"
      memory: "512Mi"

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/client-max-body-size: "100m"
    nginx.ingress.kubernetes.io/client-body-timeout: "120s"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300s"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "10m"
  hosts:
    - host: "rag.local"
      paths:
        - path: /
          service: gateway-api-gw
          namespace: default
          port: 8080

gkeGateway:
  enabled: false
  hosts:
    - host: "example.com"  # Default host, should be overridden in environment-specific values
  routes:
    - path: /
      service: gateway-api-gw
      port: 8080
      namespace: default

persistence:
  fileStorage:
    enabled: true
    size: 30Gi
    storageClass: standard  # Default storage class for Minikube
    accessMode: ReadWriteOnce # Only indexing pod writes!
